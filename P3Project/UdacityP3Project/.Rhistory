suppressMessages(library(scales))
suppressMessages(library(GGally))
suppressMessages(library(memisc))
suppressMessages(library(RColorBrewer))
suppressMessages(library(plyr))
setwd('C:/nanodegree/DA/EDA/P3Project')
LoanDataAll <- read.csv('prosperLoanData.csv',header = TRUE, check.names = FALSE)
LoanData <- LoanDataAll %>%
dplyr::select(Term,LoanStatus,BorrowerRate,BorrowerState,Occupation,EmploymentStatus,IsBorrowerHomeowner,CreditScoreRangeLower,CreditScoreRangeUpper,CurrentDelinquencies,AmountDelinquent,IncomeRange,LoanCurrentDaysDelinquent,LoanOriginalAmount,LoanOriginationQuarter,MonthlyLoanPayment,LP_CustomerPayments,LP_CustomerPrincipalPayments,LP_InterestandFees,LP_NetPrincipalLoss)
LoanData$Year <- sub(
dfTemp <- subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))
LoanData$Year <- sub("[[:alnum:]][[:digit:]]","",LoanData$LoanOriginationQuarter)
LoanData$Year <- sub("[[:alnum:]][[:digit:]]","",LoanData$LoanOriginationQuarter)
dfTemp <- subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))
by(dfTemp$CurrentDelinquencies,dfTemp$Year,sum)
by(dfTemp$CurrentDelinquencies,dfTemp$IncomeRange,sum)
with(dfTemp,table(dfTemp$Year,dfTemp$CurrentDelinquencies,dfTemp$IsBorrowerHomeowner),sum)
by(dfTemp$CurrentDelinquencies,dfTemp$dfTemp$IsBorrowerHomeowner,sum)
by(dfTemp$CurrentDelinquencies,dfTemp$IsBorrowerHomeowner,sum)
ggplot(data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper, y = CurrentDelinquencies, color = IncomeRange)) +
geom_jitter(size=5) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
scale_color_brewer(type = 'div')
ggplot(data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x=CurrentDelinquencies)) +
geom_density(aes(group=CreditScoreRangeUpper,color=CreditScoreRangeUpper),alpha=0.30) +
scale_x_log10()
names(LoanData)
str(LoanData)
levels(LoanData$LoanStatus)
levels(LoanData$BorrowerState)
levels(LoanData$EmploymentStatus)
levels(LoanData$IsBorrowerHomeowner)
levels(LoanData$IncomeRange)
levels(LoanData$LoanOriginationQuarter)
LoanData$Year <- sub("[[:alnum:]][[:digit:]] ","",LoanData$LoanOriginationQuarter)
str(LoanData)
ggplot(aes(x = Year, y = LP_NetPrincipalLoss ),
data = subset(LoanData,LoanData$LP_NetPrincipalLoss > 0)) +
geom_boxplot(aes(fill = IncomeRange)) +
ylab('LP_NetPrincipalLoss') +
xlab('year') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle('Net principal Loss per year\n')
p3 <- ggplot(data = LoanData,
aes(x = BorrowerRate,
y = LoanOriginalAmount)) +
geom_jitter(alpha=0.5,aes(color = CreditScoreRangeUpper),
size=2) +
scale_x_continuous(breaks = seq(0.0,0.3, 0.1),limits = c(0.0,0.3)) +
scale_color_gradient(limits=c(600,850),high="green",low="blue") +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ Year) +
xlab("Borrower Rate") +
ylab("Loan Amount") +
ggtitle("Loan Amount vs Borrower Rate by Credit Score each year")
suppressWarnings(print(p3))
ggplot(aes(x = Year, y = LP_NetPrincipalLoss ),
data = subset(LoanData,LoanData$LP_NetPrincipalLoss > 0)) +
geom_boxplot(aes(fill = IncomeRange)) +
ylab('LP_NetPrincipalLoss') +
xlab('year') +
theme(axis.text.x = element_text(angle = 90)) +
ggtitle('Net principal Loss per year\n')
ggplot(aes(x = Year, y = LoanOriginalAmount,color=IncomeRange),
data = LoanData) +
geom_jitter(size = 3) +
scale_y_continuous(breaks = seq(0,40000, 5000),limits = c(0,40000)) +
scale_color_brewer(type = 'qual') +
theme_minimal() +
xlab('Year') +
ylab('LoanOriginalAmount') +
ggtitle('Loans Issues per year By Income range\n')
ggplot(aes(x = Year, y = CurrentDelinquencies,color=IsBorrowerHomeowner),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))) +
geom_jitter(size = 2) +
scale_color_brewer(palette="Set1") +
theme_minimal() +
xlab('Year') +
ylab('CurrentDelinquencies') +
ggtitle('Number of delinquences per year By Borrower Type\n')
ggplot(aes(x = LoanOriginalAmount, y = MonthlyLoanPayment),
data = LoanData) +
geom_point(alpha=1/4,size = 1, position = 'jitter') +
geom_smooth(method='lm',color='red')
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
suppressMessages(library(gridExtra))
suppressMessages(library(alr3))
suppressMessages(library(reshape2))
suppressMessages(library(scales))
suppressMessages(library(GGally))
suppressMessages(library(memisc))
suppressMessages(library(RColorBrewer))
suppressMessages(library(plyr))
setwd('C:/nanodegree/DA/EDA/P3Project')
LoanDataAll <- read.csv('prosperLoanData.csv',header = TRUE, check.names = FALSE)
LoanData <- LoanDataAll %>%
dplyr::select(Term,LoanStatus,BorrowerRate,BorrowerState,Occupation,EmploymentStatus,IsBorrowerHomeowner,CreditScoreRangeLower,CreditScoreRangeUpper,CurrentDelinquencies,AmountDelinquent,IncomeRange,LoanCurrentDaysDelinquent,LoanOriginalAmount,LoanOriginationQuarter,MonthlyLoanPayment,LP_CustomerPayments,LP_CustomerPrincipalPayments,LP_InterestandFees,LP_NetPrincipalLoss)
LoanData$Year <- sub("[[:alnum:]][[:digit:]] ","",LoanData$LoanOriginationQuarter)
dfTemp <- subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~.) +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~., scales = "free", space = "free") +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~., space = "free") +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~., space = "free_y") +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000)) +
scale_x_continuous(breaks = seq(0, 15000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~., space = "free_y") +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000)) +
scale_y_continuous(breaks = seq(0, 15000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~., space = "free_y") +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000)) +
scale_y_continuous(breaks = seq(0, 15000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~., scales = "free_y", space = "free_y") +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000)) +
scale_y_continuous(breaks = seq(0, 15000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~., space = "free_y") +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
ggplot(subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CurrentDelinquencies)) +
geom_freqpoly(binwidth = 1) +
scale_x_continuous(breaks = seq(1, 83, 3)) +
scale_y_continuous(breaks = c(1,3000,6000,9000,12000))
ggplot(subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CurrentDelinquencies)) +
geom_freqpoly(binwidth = 1) +
scale_x_continuous(breaks = seq(1, 83, 3)) +
scale_y_continuous(breaks = c(1,3000,6000,9000,12000)) +
xlab('Current Deliquencies') +
ylab('Number of Loans') +
ggtile('Borrowers Deliquencies\n')
ggplot(subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CurrentDelinquencies)) +
geom_freqpoly(binwidth = 1) +
scale_x_continuous(breaks = seq(1, 83, 3)) +
scale_y_continuous(breaks = c(1,3000,6000,9000,12000)) +
xlab('Current Deliquencies') +
ylab('Number of Loans') +
ggtitle('Borrowers Deliquencies\n')
ggplot(LoanData, mapping = aes(x = IncomeRange)) +
layer(geom = "bar", mapping = aes(fill = IsBorrowerHomeowner)) +
theme(axis.text.x = element_text(angle = 90)) +
xlab('Income Range') +
ylab('Number of Loans(count)') +
ggtitle('Income Range of the Borrowers')
ggplot(aes(x = LoanOriginalAmount, y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/10,position=position_jitter(h=0),color='red') +
scale_x_continuous(breaks = seq(0,40000, 5000),limits = c(0,40000)) +
ggtitle("Delinquencies by Loan Amount")
ggplot(aes(x = LoanOriginalAmount, y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))) +
geom_jitter(alpha=1/10,position=position_jitter(h=0),color='red') +
scale_x_continuous(breaks = seq(0,40000, 5000),limits = c(0,40000), labels = dollar) +
ggtitle("Delinquencies by Loan Amount")
ggplot(LoanData, aes(x = LoanOriginalAmount)) +
geom_histogram(binwidth = 400, color = 'black',fill = '#099DD9') +
scale_x_continuous(breaks = seq(0,40000, 5000),limits = c(0,40000), labels = dollar) +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts\n')
table(LoanDataAll$Term)
ggplot(aes(x = LoanOriginalAmount), data = LoanData) +
geom_histogram(binwidth = 500, color = 'black', fill = '#099DD9') +
scale_x_continuous(breaks = seq(0, 35000, 5000), labels = dollar) +
scale_y_continuous(breaks = seq(0, 15000, 5000)) +
coord_cartesian(c(0,35000)) +
facet_grid(EmploymentStatus~., space = "free_y") +
xlab('Original Loan Amount (LoanOriginalAmount)') +
ylab('Number of Cutomers Borrowed (count)') +
ggtitle('LoanAmounts by EmploymentStatus\n')
summary(LoanData$LoanStatus)
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss > 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',fill = '#099DD9') +
xlab('Net Principal Loss (LP_NetPrincipalLoss)') +
ylab('Number of Loans with Principal Loss (count)') +
ggtitle('Loss of princial Amount on the Loans Issued\n')
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss > 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',fill = '#099DD9') +
scale_x_continuous(labels = dollar) +
xlab('Net Principal Loss (LP_NetPrincipalLoss)') +
ylab('Number of Loans with Principal Loss (count)') +
ggtitle('Loss of princial Amount on the Loans Issued\n')
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss < 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',fill = 'orange') +
xlab('Net Principal Gain (LP_NetPrincipalLoss < 0)') +
ylab('Number of Loans with Principal Gain (count)') +
ggtitle('Gain of princial Amount on the Loans Issued\n')
ggplot(subset(LoanData,
LoanData$LP_NetPrincipalLoss < 0),
aes(x = LP_NetPrincipalLoss)) +
geom_histogram(binwidth = 100,color = 'black',fill = 'orange') +
scale_x_continuous(labels = dollar) +
xlab('Net Principal Gain (LP_NetPrincipalLoss < 0)') +
ylab('Number of Loans with Principal Gain (count)') +
ggtitle('Gain of princial Amount on the Loans Issued\n')
ggplot(LoanData, mapping = aes(x = IncomeRange)) +
layer(geom = "bar", mapping = aes(fill = IsBorrowerHomeowner)) +
theme(axis.text.x = element_text(angle = 90)) +
xlab('Income Range') +
ylab('Number of Loans(count)') +
ggtitle('Income Range of the Borrowers\n')
ggplot(data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x=CurrentDelinquencies)) +
geom_density(aes(group=CreditScoreRangeUpper,color=CreditScoreRangeUpper),alpha=0.30) +
scale_x_log10()
ggplot(data=subset(LoanData,LoanData$LP_NetPrincipalLoss > 0),
aes(x=LP_NetPrincipalLoss)) +
geom_density(aes(group=Year,color=Year),alpha=0.30)
ggplot(aes(x = Year, y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))) +
geom_boxplot(aes(fill = '#099DD9')) +
ylab('CurrentDelinquencies') +
xlab('Year') +
ggtitle('CurrentDelinquencies by Year')
ggplot(aes(x = Year, y = CurrentDelinquencies),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))) +
geom_boxplot(aes(fill = Year)) +
ylab('CurrentDelinquencies') +
xlab('Year') +
ggtitle('CurrentDelinquencies by Year')
ggplot(aes(x = LP_NetPrincipalLoss, y = LoanOriginalAmount),
data = LoanDataPL) +
geom_point(alpha=1/10,size = 3, position = 'jitter', color="blue") +
coord_trans(y = 'log10') +
xlab('LP_NetPrincipalLoss') +
ylab('log10(LoanOriginalAmount)') +
ggtitle('LP_NetPrincipalLoss vs log10(LoanOriginalAmount)\n')
LoanDataPL <- subset(LoanData,LoanData$LP_NetPrincipalLoss>0)
ggplot(aes(x = LP_NetPrincipalLoss, y = LoanOriginalAmount),
data = LoanDataPL) +
geom_point(alpha=1/10,size = 3, position = 'jitter', color="blue") +
ggtitle('LP_NetPrincipalLoss vs LoanOriginalAmount\n')
ggplot(aes(x = LP_NetPrincipalLoss, y = LoanOriginalAmount),
data = LoanDataPL) +
geom_point(alpha=1/10,size = 3, position = 'jitter', color="blue") +
coord_trans(y = 'log10') +
xlab('LP_NetPrincipalLoss') +
ylab('log10(LoanOriginalAmount)') +
ggtitle('LP_NetPrincipalLoss vs log10(LoanOriginalAmount)\n')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(size=3) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ IsBorrowerHomeowner) +
scale_color_brewer(type = 'div')
ggplot(data=subset(LoanData,LoanData$LP_NetPrincipalLoss > 0),
aes(x=LP_NetPrincipalLoss)) +
geom_density(aes(group=Year,color=Year),alpha=0.30) +
ggtitle('Density Plot of Net Principal Loss\n')
ggplot(data=subset(LoanData,LoanData$LP_NetPrincipalLoss > 0),
aes(x=LP_NetPrincipalLoss)) +
geom_density(aes(group=Year,color=Year),alpha=0.30) +
xlab('LP_NetPrincipalLoss') +
ylab('Density') +
ggtitle('Density Plot of Net Principal Loss\n')
ggplot(data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper, y = CurrentDelinquencies, color = IncomeRange)) +
geom_jitter(size=5) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
scale_color_brewer(type = 'div')
ggplot(data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper, y = CurrentDelinquencies, color = IncomeRange)) +
geom_jitter(size=3) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
scale_color_brewer(type = 'div')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x=CurrentDelinquencies)) +
geom_density(aes(group=CreditScoreRangeUpper,
color=CreditScoreRangeUpper),
alpha=0.30) +
scale_x_log10() +
xlab('CurrentDelinquencies') +
ylab('Density') +
ggtitle('Density Plot of Delinquencies\n')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x=CurrentDelinquencies)) +
geom_density(aes(group=CreditScoreRangeUpper,
color=CreditScoreRangeUpper),
alpha=0.30, size=2) +
scale_x_log10() +
xlab('CurrentDelinquencies') +
ylab('Density') +
ggtitle('Density Plot of Delinquencies\n')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x=CurrentDelinquencies)) +
geom_density(aes(group=CreditScoreRangeUpper,
color=CreditScoreRangeUpper),
alpha=0.30) +
scale_x_log10() + coord_trans(x="log10") +
xlab('CurrentDelinquencies') +
ylab('Density') +
ggtitle('Density Plot of Delinquencies\n')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x=CurrentDelinquencies)) +
geom_density(aes(group=CreditScoreRangeUpper,
color=CreditScoreRangeUpper),
alpha=0.30) +
scale_x_log10() +
xlab('CurrentDelinquencies') +
ylab('Density') +
ggtitle('Density Plot of Delinquencies\n')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x=CurrentDelinquencies)) +
geom_density(aes(group=CreditScoreRangeUpper,
color=CreditScoreRangeUpper),
alpha=0.30) +
scale_x_log10() +
facet_wrap(~CreditScoreRangeUpper, ncol=2,
scales = "free")
xlab('CurrentDelinquencies') +
ylab('Density') +
ggtitle('Density Plot of Delinquencies\n')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x=CurrentDelinquencies)) +
geom_density(aes(group=CreditScoreRangeUpper,
color=CreditScoreRangeUpper),
alpha=0.30) +
scale_x_log10() +
xlab('CurrentDelinquencies') +
ylab('Density') +
ggtitle('Density Plot of Delinquencies\n')
ggplot(data=subset(LoanData,LoanData$LP_NetPrincipalLoss > 0),
aes(x=LP_NetPrincipalLoss)) +
geom_density(aes(group=Year,color=Year),alpha=0.30) +
xlab('LP_NetPrincipalLoss') +
ylab('Density') +
ggtitle('Density Plot of Net Principal Loss\n')
ggplot(data=subset(LoanData,LoanData$LP_NetPrincipalLoss > 0),
aes(x=LP_NetPrincipalLoss)) +
geom_density(aes(group=Year,color=Year),alpha=0.30) +
facet_wrap(~Year, ncol=3,
scales = "free")
xlab('LP_NetPrincipalLoss') +
ylab('Density') +
ggtitle('Density Plot of Net Principal Loss\n')
ggplot(data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper, y = CurrentDelinquencies, color = IncomeRange)) +
geom_jitter(size=3) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
scale_color_brewer(type = 'div')
ggplot(data=subset(LoanData,LoanData$LP_NetPrincipalLoss > 0),
aes(x=LP_NetPrincipalLoss)) +
geom_density(aes(group=Year,color=Year),alpha=0.30) +
facet_wrap(~Year, ncol=3,
scales = "free") +
xlab('LP_NetPrincipalLoss') +
ylab('Density') +
ggtitle('Density Plot of Net Principal Loss\n')
ggplot(aes(x = CurrentDelinquencies, y = LoanOriginalAmount, color = EmploymentStatus),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))) +
geom_jitter(size = 5) +
scale_y_continuous(breaks = seq(0,40000, 5000),limits = c(0,40000)) +
theme_minimal() +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by EmploymentStatus\n')
ggplot(aes(x = CurrentDelinquencies, y = LoanOriginalAmount, color = IncomeRange),
data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies))) +
geom_jitter(size = 8) +
scale_y_log10() +
scale_color_brewer(type = 'qual') +
theme_minimal() +
xlab('CurrentDelinquencies') +
ylab('LoanOriginalAmount') +
ggtitle('CurrentDelinquencies vs LoanOriginalAmount \n by IncomeRange\n')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(size=3) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ IsBorrowerHomeowner) +
scale_color_brewer(type = 'div')
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(size=3) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ IsBorrowerHomeowner) +
scale_color_brewer(type = 'div') +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
\n faceted by IncomeRange\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(size=3) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ IsBorrowerHomeowner) +
scale_color_brewer(type = 'div') +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by IncomeRange\n")
ggplot(data = subset(LoanData,
LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper,
y = CurrentDelinquencies,
color = IncomeRange)) +
geom_jitter(size=3) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ IsBorrowerHomeowner) +
scale_color_brewer(type = 'div') +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by IsBorrowerHomeowner\n")
ggplot(data = subset(LoanData,LoanData$CurrentDelinquencies > 0 & !is.na(CurrentDelinquencies)),
aes(x = CreditScoreRangeUpper, y = CurrentDelinquencies, color = IncomeRange)) +
geom_jitter(size=3) +
theme(axis.text.x = element_text(angle = 90)) +
facet_wrap(~ EmploymentStatus) +
scale_color_brewer(type = 'div') +
ggtitle("CreditScoreRangeUpper vs CurrentDelinquencies
faceted by EmploymentStatus\n")
Common function in R - http://discussions.udacity.com/t/common-function-in-r/10404/2
ggplot(aes(x = CreditScoreRangeUpper, y = mean_Loan_Amount),
data = LoanData.ld_by_CreditScoreRangeUpper_IsBorrowerHomeowner) +
geom_line(aes(color=IsBorrowerHomeowner)) +
xlab("\nCreditScoreRangeUpper") +
ylab("Mean LoanorignalAmount\n") +
ggtitle("Mean Loan Amount vs CreditScoreRangeUpper
by IsBorrowerHomeowner\n")
LoanData.ld_by_CreditScoreRangeUpper_IsBorrowerHomeowner <- LoanData %>%
dplyr::group_by(CreditScoreRangeUpper,IsBorrowerHomeowner) %>%
dplyr::summarise(mean_Loan_Amount=mean(LoanOriginalAmount),
median_Loan_Amount=median(as.numeric(LoanOriginalAmount)),
n =n()) %>%
dplyr::ungroup() %>%
arrange(CreditScoreRangeUpper)
ggplot(aes(x = CreditScoreRangeUpper, y = mean_Loan_Amount),
data = LoanData.ld_by_CreditScoreRangeUpper_IsBorrowerHomeowner) +
geom_line(aes(color=IsBorrowerHomeowner)) +
xlab("\nCreditScoreRangeUpper") +
ylab("Mean LoanorignalAmount\n") +
ggtitle("Mean Loan Amount vs CreditScoreRangeUpper
by IsBorrowerHomeowner\n")
